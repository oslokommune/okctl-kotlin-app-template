name: Build and deploy to ecr for dev

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  docker-build-push:
    # https://docs.github.com/en/actions/reference/environments#about-environments
    environment: dev

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read

    outputs:
      # Tag when pushing image to ECR and updating IAC repo
      IMAGE_TAG: ${{ steps.tag.outputs.IMAGE_TAG }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0' # Recommended to use by https://github.com/anothrNick/github-tag-action/blame/master/README.md#L35

      #####
      # Will generate a tag in the following format: `2021-11-22Z.01e3dd9.10327`
      # Set as image tag when pushed to ECR and for updating the image tag
      # in the IAC-repo (see "update-iac-tag" below)
      - name: Generate image tag
        id: tag
        env:
          HASH: ${{ github.sha }}
        run: |
          stamp=$(date -u +%FZ)
          short_sha=$(git rev-parse --short $HASH)
          tag="$stamp.$short_sha.$RANDOM"
          echo "::set-output name=IMAGE_TAG::$tag"
        working-directory: .

      #####
      # Set up and login to your AWS account
      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure the AWS credentials
        with:
          aws-region: eu-west-1
          # The full ARN for the role created in terraform
          role-to-assume: ${{ secrets.DEV_REFERENCE_APP_ECR_PUSH_ROLE }}

      - uses: aws-actions/amazon-ecr-login@v1
        name: Login to Amazon ECR
        id: login-ecr

      #####
      # At this point we are logged in and have assumed a role
      # in AWS, you can now interact with the AWS resources
      # that your role permits you to
      - name: Build, tag, and push image to Amazon ECR
        id: build-and-push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: okctl-reference-app
          IMAGE_TAG: ${{ steps.tag.outputs.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        working-directory: .

  update-tag:
    needs: docker-build-push

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      - uses: actions/checkout@v2
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'oslokommune/okctl-reference-iac'
          ref: 'main'
          # Private key in secret for app-repo, public key as a read/write deploy key in iac-repo
          ssh-key: '${{ secrets.CLUSTER_DEPLOY_KEY }}'

      - uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.CLUSTER_DEPLOY_KEY }}

      - name: Update IAC repo with image
        env:
          CONTAINER_NAME: okctl-reference-app
          IMAGE_TAG: ${{ needs.docker-build-push.outputs.IMAGE_TAG }}
          DEPLOYMENT_YAML_FILE: infrastructure/applications/okctl-reference-app/overlays/okctl-reference-dev/deployment-patch.json
        run: |
          # Update image tag
          sudo apt install jq
          image=$(jq -r '.[] | select(.path=="/spec/template/spec/containers/0/image").value' ${DEPLOYMENT_YAML_FILE})

          if [[ "$image" == *":"* ]]; then
            tag=$(echo $image | cut -d ":" -f2)
            newimage=$(sed "s#$tag#$IMAGE_TAG#" <<< $image)
            sed -i "s#$image#$newimage#" $DEPLOYMENT_YAML_FILE
          else
           sed -i "s#$image#$image:$IMAGE_TAG#" $DEPLOYMENT_YAML_FILE
          fi

          # Update IAC repository
          git config --global user.email "no-reply@origo.oslo.kommune.no"
          git config --global user.name "Github actions"

          git pull
          git add $DEPLOYMENT_YAML_FILE
          git commit -m "Update deployment.yaml image tag"
          git push

        working-directory: .

