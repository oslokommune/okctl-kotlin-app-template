name: Docker build and push to ghcr

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  docker-build-push:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '1'

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          ## TODO You need your own ghcr user
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Github Tag Bump
        id: bump_version
        uses: anothrNick/github-tag-action@18284c78f6ac68868d5341f57c4f971fb5b7605c # 1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          WITH_V: true

      - run: echo "tag=ghcr.io/oslokommune/okctl-kotlin-app-template" >> $GITHUB_ENV
        id: tag_store
      - run: echo "version=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
        id: version_store

      - name: Build and push Docker images
        run: docker build -t ${{ env.tag }}:${{ env.version }} .

      - name: Push docker image
        run: docker push ${{ env.tag }}:${{ env.version }}

  update-tag:
    needs: docker-build-push

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      - uses: actions/checkout@v2
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'oslokommune/okctl-demo-iac'
          ref: 'main'
          ssh-key: '${{ secrets.CLUSTER_DEPLOY_KEY_DEMO }}'

      - uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.CLUSTER_DEPLOY_KEY_DEMO }}

      - name: Update IAC repo with image
        env:
          CONTAINER_NAME: ghcr.io/oslokommune/okctl-kotlin-app-template
          IMAGE_TAG: ${{ GITHUB_REF/#refs\/tags\/ }}
          DEPLOYMENT_YAML_FILE: infrastructure/applications/demo-app/overlays/okctl-demo-dev/deployment-patch.json
        run: |
          # Update image tag
          sudo apt install jq
          image=$(jq -r '.[] | select(.path=="/spec/template/spec/containers/0/image").value' ${DEPLOYMENT_YAML_FILE})

          if [[ "$image" == *":"* ]]; then
            tag=$(echo $image | cut -d ":" -f2)
            newimage=$(sed "s#$tag#$IMAGE_TAG#" <<< $image)
            sed -i "s#$image#$newimage#" $DEPLOYMENT_YAML_FILE
          else
           sed -i "s#$image#$image:$IMAGE_TAG#" $DEPLOYMENT_YAML_FILE
          fi

          # Update IAC repository
          git config --global user.email "no-reply@origo.oslo.kommune.no"
          git config --global user.name "Github actions"

          git add $DEPLOYMENT_YAML_FILE
          git commit -m "Update deployment.yaml image tag"
          git push

        working-directory: .